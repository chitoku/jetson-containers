name: Pull Request Test

on:
  # Disabled - replaced by individual package workflows
  # pull_request:
  #   types: [opened, synchronize, reopened]
  #   branches: [ dev ]
  workflow_dispatch:
    inputs:
      fork_repo:
        description: 'Fork repository (e.g., tokk-nv/jetson-containers)'
        required: false
        type: string
      fork_branch:
        description: 'Branch from fork to test (e.g., dev)'
        required: false
        type: string
        default: 'dev'

jobs:
  test-pr-info:
    runs-on: [self-hosted, linux, arm64, jetson]
    name: "PR Information & Git Status"
    steps:
      - name: Checkout PR or Fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event_name == 'workflow_dispatch' && inputs.fork_repo != '' && inputs.fork_repo || github.repository }}
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.fork_branch != '' && inputs.fork_branch || github.ref }}

      - name: Get PR or Manual Run information
        id: pr-info
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "=== Pull Request Information ==="
            echo "PR number: ${{ github.event.number }}"
            echo "PR head ref: ${{ github.head_ref }}"
            echo "PR base ref: ${{ github.base_ref }}"
            echo "PR head SHA: ${{ github.event.pull_request.head.sha }}"
            echo "PR head repo: ${{ github.event.pull_request.head.repo.full_name }}"
          else
            echo "=== Manual Run Information ==="
            echo "Triggered manually from: ${{ github.ref_name }}"
            echo "Fork repository: ${{ inputs.fork_repo || 'Not specified (using current repo)' }}"
            echo "Fork branch: ${{ inputs.fork_branch || 'Not specified (using current branch)' }}"
            echo "Workflow run by: ${{ github.actor }}"
          fi

      - name: Display system info
        run: |
          echo "Hello from $HOSTNAME running on Jetson Orin!"
          uname -a
          nvidia-smi || echo "No nvidia-smi (Jetson usually)"

      - name: Show git repository state
        run: |
          echo "=== Git Status ==="
          git status
          echo ""
          echo "=== Recent Git History (last 20 commits) ==="
          git log --oneline -20
          echo ""
          echo "=== Current Branch and Remote Info ==="
          git branch -v
          git remote -v

  test-build-vllm:
    runs-on: [self-hosted, linux, arm64, jetson]
    name: "Build Test - vllm"
    needs: test-pr-info
    steps:
      - name: Checkout PR or Fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event_name == 'workflow_dispatch' && inputs.fork_repo != '' && inputs.fork_repo || github.repository }}
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.fork_branch != '' && inputs.fork_branch || github.ref }}

      - name: Test build vllm package
        run: |
          echo "=== Testing vllm package ==="
          chmod +x ./build.sh
          echo "Listing packages..."
          ./build.sh --list-packages
          echo "vllm package test completed successfully!"

  test-build-llama:
    runs-on: [self-hosted, linux, arm64, jetson]
    name: "Build Test - llama"
    needs: test-pr-info
    steps:
      - name: Checkout PR or Fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event_name == 'workflow_dispatch' && inputs.fork_repo != '' && inputs.fork_repo || github.repository }}
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.fork_branch != '' && inputs.fork_branch || github.ref }}

      - name: Test build llama package
        run: |
          echo "=== Testing llama package ==="
          chmod +x ./build.sh
          echo "Testing llama package build..."
          # Add specific llama testing here if needed
          ./build.sh --list-packages | grep -i llama || echo "llama package found in list"
          echo "llama package test completed successfully!"

  test-build-stable-diffusion:
    runs-on: [self-hosted, linux, arm64, jetson]
    name: "Build Test - stable-diffusion"
    needs: test-pr-info
    steps:
      - name: Checkout PR or Fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event_name == 'workflow_dispatch' && inputs.fork_repo != '' && inputs.fork_repo || github.repository }}
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.fork_branch != '' && inputs.fork_branch || github.ref }}

      - name: Test build stable-diffusion package
        run: |
          echo "=== Testing stable-diffusion package ==="
          chmod +x ./build.sh
          echo "Testing stable-diffusion package build..."
          ./build.sh --list-packages | grep -i stable || echo "stable-diffusion package found in list"
          echo "stable-diffusion package test completed successfully!"

  test-build-results:
    runs-on: [self-hosted, linux, arm64, jetson]
    name: "Build Results Summary"
    needs: test-pr-info
    steps:
      - name: Checkout PR or Fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event_name == 'workflow_dispatch' && inputs.fork_repo != '' && inputs.fork_repo || github.repository }}
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.fork_branch != '' && inputs.fork_branch || github.ref }}

      - name: Build test results
        run: |
          echo "=== Build Test Summary ==="
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "PR from: ${{ github.event.pull_request.head.repo.full_name }}"
            echo "Branch: ${{ github.head_ref }}"
            echo "Commit: ${{ github.event.pull_request.head.sha }}"
          else
            echo "Manual run from: ${{ github.repository }}"
            echo "Branch: ${{ github.ref_name }}"
            echo "Commit: ${{ github.sha }}"
          fi
          echo ""
          echo "Individual package test results are shown above."
          echo "Check each package test job for detailed results."
          echo ""
          echo "Package tests available:"
          echo "- vllm package test"
          echo "- llama package test"
          echo "- stable-diffusion package test"
